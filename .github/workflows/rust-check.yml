name: Rust CI Checks

on:
  push:
    branches:
      - main
      - develop
      - "feature/**"
      - "release/**"
      - "backend/**"
    paths:
      - "**/*.rs"
  pull_request:
    branches:
      - main
      - develop
    paths:
      - "**/*.rs"

jobs:
  # Format
  rust-format-check:
    name: Format Check
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        # Esto se tiene que cambiar a los directorios de las API
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Upload formatting errors (if any)
        if: failure()
        run: |
          echo "Rust code is not formatted correctly. Please run 'cargo fmt' locally."
  
  # Linter
  clippy:
    name: Clippy Linting
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run Clippy
        run: cargo clippy -- -D warnings

  # tests:
    # name: Run Tests
    # runs-on: ubuntu-latest
    # strategy:
      # matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
    # steps:
      # - name: Checkout code
        # uses: actions/checkout@v3

      # - name: Cache Cargo
        # uses: Swatinem/rust-cache@v2

      # - name: Set up Rust
        # uses: dtolnay/rust-toolchain@stable

      # - name: Run Tests
        # run: cargo test
